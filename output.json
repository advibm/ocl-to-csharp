{
    "AfterCode": "this.alter>=0",
    "BeforeCode": "this.alter>=0",
    "ContextName": "Person",
    "FunctionName": ""
}
{
    "AfterCode": "this.eltern.All(e => e.alter>this.alter)",
    "BeforeCode": "this.eltern.All(e => e.alter>this.alter)",
    "ContextName": "Person",
    "FunctionName": ""
}
{
    "AfterCode": "this.alter==pre.alter+1",
    "BeforeCode": true,
    "ContextName": "Person",
    "FunctionName": "hatGeburtstag()"
}
{
    "AfterCode": "this.eltern.Count()<=2",
    "BeforeCode": "this.eltern.Count()<=2",
    "ContextName": "Person",
    "FunctionName": "hatGeburtstag()"
}
{
    "AfterCode": "this.kinder.Count > 0() && this.kinder.Count()>pre.kinder.Count()",
    "BeforeCode": true,
    "ContextName": "Person",
    "FunctionName": "bekommtKind()"
}
{
    "AfterCode": "if (this.alter<18) {this.autos.isEmpty()}",
    "BeforeCode": "if (this.alter<18) {this.autos.isEmpty()}",
    "ContextName": "Person",
    "FunctionName": "bekommtKind()"
}
{
    "AfterCode": "this.erstzulassung>=this.baujahr",
    "BeforeCode": "this.erstzulassung>=this.baujahr",
    "ContextName": "Auto",
    "FunctionName": "bekommtKind()"
}
{
    "AfterCode": "if (this.autos.Count > 0()) {this.autos.Exists(a => DateTime.Today.Year-a.baujahr<this.alter)}",
    "BeforeCode": "if (this.autos.Count > 0()) {this.autos.Exists(a => DateTime.Today.Year-a.baujahr<this.alter)}",
    "ContextName": "Person",
    "FunctionName": "bekommtKind()"
}
{
    "AfterCode": "!this.eltern.Exists(p => p != this)",
    "BeforeCode": "!this.eltern.Exists(p => p != this)",
    "ContextName": "Person",
    "FunctionName": "bekommtKind()"
}
{
    "AfterCode": "Person.allInstances().Exists(p => p.autos.Count()>0)",
    "BeforeCode": "Person.allInstances().Exists(p => p.autos.Count()>0)",
    "ContextName": "Person",
    "FunctionName": "bekommtKind()"
}
{
    "AfterCode": "this.childs.All(e => e.age<this.age-7)",
    "BeforeCode": "this.childs.All(e => e.age<this.age-7)",
    "ContextName": "Person",
    "FunctionName": "bekommtKind()"
}
{
    "AfterCode": "this.childs.All(e1,e2 => if (e1!=e2) {e1.name!=e2.name})",
    "BeforeCode": "this.childs.All(e1,e2 => if (e1!=e2) {e1.name!=e2.name})",
    "ContextName": "Person",
    "FunctionName": "bekommtKind()"
}
{
    "AfterCode": true,
    "BeforeCode": "this.isConfirmed()==false && d>e+0.500000",
    "ContextName": "Meeting",
    "FunctionName": "shift(int d, double e)"
}
{
    "AfterCode": "this.workschedule.End>ende",
    "BeforeCode": true,
    "ContextName": "Maschine",
    "FunctionName": "FinishWork(int ende)"
}
