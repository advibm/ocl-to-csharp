package Rules 

    context Person inv: self.alter >=0
    context Person inv: self.eltern->forAll(e|e.alter>self.alter)
    context Person::hatGeburtstag() post: self.alter=self.alter@pre+1
    context Person inv: self.eltern->size()<=2
    context Person::bekommtKind() post: self.kinder->notEmpty() and self.kinder->size() > self.kinder@pre->size()
    context Person inv: self.alter<18 implies self.autos->isEmpty()
    context Auto inv: self.erstzulassung>=self.baujahr
    context Person inv: self.autos->notEmpty() implies self.autos->exists( a | Calendar.YEAR - a.baujahr < self.alter)
    context Person inv: self.eltern->excludes(self)
    context Person inv: Person.allInstances()->exists(p | p.autos->size() > 0)
	
	context Person inv : self.childs->forAll( e | e.age < self.age - 7)

	context Person inv i3 : self.childs->forAll( e1,e2 | e1 <> e2 implies e1.name <> e2.name)

	context Meeting::shift(d:Integer, e:Double) pre: self.isConfirmed() = false and d>e+0.5

	context Maschine::FinishWork(ende:Integer) post: self.workschedule.End > ende

endpackage
